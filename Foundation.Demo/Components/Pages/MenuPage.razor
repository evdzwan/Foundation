@rendermode InteractiveServer
@page "/components/menu"
@inject IJSRuntime JS
@inherits Component

<PageTitle>Menu</PageTitle>

<h3>Surface</h3>
<div class="triggers">
    <button @onclick="ShowMenu">Demo Trigger</button>
</div>

@code {
    Task OnMenuItemPressed(MenuItem item) => OnMenuItemPressed(item, custom: false);
    async Task OnMenuItemPressed(MenuItem item, bool custom)
        => await JS.InvokeVoidAsync("alert", $"MenuItemPressed: {item.Context}, Custom={custom}");

    void ShowMenu(MouseEventArgs e) => AddToSurface(RenderMenu("Demo Menu", e.ClientX, e.ClientY));
    RenderFragment RenderMenu(string title, double left, double top) => __builder =>
    {
        <Menu Title="@title" Offset="(left, top)" OnItemPressed="OnMenuItemPressed">
            <MenuItem Title="First Demo MenuItem" Context="@("MenuItem 1")" />
            <MenuItem Context="@("MenuItem 2")">
                <Content>Second Demo MenuItem</Content>
                <Items>
                    <MenuItem Title="@($"First Demo MenuItem (for {title})")" Context="@("MenuItem 2-1")" />
                    <MenuItem OnPressed="item => OnMenuItemPressed(item, custom: true)" Context="@("MenuItem 2-2")">
                        <Content>Second <b>Demo</b> MenuItem (for @title)</Content>
                    </MenuItem>
                </Items>
            </MenuItem>
            <MenuItem>
                <Content>Third <b>Demo</b> MenuItem</Content>
            </MenuItem>
        </Menu>
    };
}
