@inject MenuController MenuController
@rendermode InteractiveServer
@page "/components/menu"
@inject IJSRuntime JS
@inherits Component

<PageTitle>Menu</PageTitle>

<h3>Surface</h3>
<div class="triggers">
    <button @onclick="@(e => MenuController.ShowMenu("ButtonMenu", e))">Demo Trigger</button>
    <div @oncontextmenu="@(e => MenuController.ShowMenu("ContextMenu", e))" @oncontextmenu:preventDefault @oncontextmenu:stopPropagation>
        Context Area
        <div @oncontextmenu="@(e => MenuController.ShowMenu("ChildMenu", Enumerable.Range(1, Random.Shared.Next(1, 10)), e))" @oncontextmenu:preventDefault @oncontextmenu:stopPropagation>
            Child Area
        </div>
    </div>
</div>

<Menu Name="ButtonMenu" Title="Button Menu" OnItemPressed="OnMenuItemPressed">
    <MenuItem Title="First MenuItem" />
    <MenuItem Title="Second MenuItem">
        <MenuItem Title="First MenuItem (Disabled)" Disabled />
        <MenuItem Title="Second MenuItem">
            <MenuItem Title="First MenuItem" />
        </MenuItem>
    </MenuItem>
    <MenuItem Title="Third MenuItem (Custom Handler)" OnPressed="item => OnMenuItemPressed(item, custom: true)" />
</Menu>

<Menu Name="ContextMenu" Title="Context Menu" OnItemPressed="OnMenuItemPressed">
    <MenuItem Title="First MenuItem" />
    <MenuItem Title="Second MenuItem" />
    <MenuItem Title="Third MenuItem (No Handler)" OnPressed="() => { }" />
</Menu>

<Menu Name="ChildMenu" Title="Child Menu" OnItemPressed="OnMenuItemPressed">
    <ForEach Items="context as IEnumerable<int> ?? []" Context="itemId">
        <MenuItem Title="@($"MenuItem {itemId}")" Disabled="Random.Shared.Next(4) == 0" @key="itemId">
            <ForEach Items="Enumerable.Range(1, itemId)" Context="childItemId">
                <MenuItem Title="@($"MenuItem {childItemId}")" />
            </ForEach>
        </MenuItem>
    </ForEach>
</Menu>

@code {
    Task OnMenuItemPressed(MenuItem item) => OnMenuItemPressed(item, custom: false);
    async Task OnMenuItemPressed(MenuItem item, bool custom)
        => await JS.InvokeVoidAsync("alert", $"MenuItemPressed: {item.Title}, Custom={custom}");
}
