@rendermode InteractiveServer
@page "/components/form"

<PageTitle>Form</PageTitle>
<h1>Form</h1>

<Form Subject="Book">
    <TextField Expression="book => book.Id" ReadOnly />
    <TextField Expression="book => book.Title" AutoFocus />
    <TextField Expression="book => book.Summary" MultiLine />
    <ChoiceField Expression="book => book.Author" Items="Authors" />
    <DateTimeField Expression="book => book.PublicationDate" Date />
</Form>

@code {
    static readonly Author[] AllAuthors = AuthorRepository.CreateRange(1, 100);
    readonly IAsyncCollection<Author> Authors = AsyncCollection.Create(async page =>
    {
        await Task.Delay(250);

        var authors = AllAuthors.Skip(page.Skip).Take(page.Take).ToArray();
        Console.WriteLine($"Retrieved Author[{authors.Length}] for {page}");
        return authors;
    });

    readonly IAsyncValue<Book> Book = AsyncValue.Create(async () =>
    {
        await Task.Delay(1_000);

        var book = BookRepository.CreateRandom();
        Console.WriteLine($"Retrieved Book {{ Id = {book.Id} }}");
        return book;
    });
}
