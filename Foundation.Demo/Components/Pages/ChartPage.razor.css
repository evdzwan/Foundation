.controls {
    display: flex;
    flex-direction: column;
    gap: .25rem;
}

    .controls > div {
        display: flex;
        gap: .25rem;
    }

        .controls > div > *:first-child {
            flex-grow: 1;
        }

.charts {
    display: grid;
    gap: .5rem;
    grid-template-columns: 1fr 1fr;
}

    .charts ::deep .chart {
        --chart-bg: var(--fn-input-bg);
        --chart-fg: var(--fn-input-fg);
        --gap: .25rem;
        --padding: .5rem;
        aspect-ratio: 2;
        border-radius: .25rem;
        transition: .25s ease;
    }

        .charts ::deep .chart.area {
            --dot-size: .6rem;
            --gap: .1rem;
        }

        .charts ::deep .chart.bar {
            --gap: .5rem;
        }

        .charts ::deep .chart.donut {
            --ring-size: 4rem;
        }

        .charts ::deep .chart.dot {
            --dot-size: 1rem;
        }

        .charts ::deep .chart .entity {
            animation: appear .5s ease forwards;
            border-radius: .25rem;
        }

            .charts ::deep .chart .entity,
            .charts ::deep .chart .entity::before,
            .charts ::deep .chart .entity::after {
                transition: .25s ease;
            }

        .charts ::deep .chart .loading-indicator {
            --size: 4rem;
            animation: rotate 1s ease infinite;
            aspect-ratio: 1;
            border: .25rem solid var(--fn-anchor-fg);
            border-bottom-color: transparent;
            border-radius: 50%;
            border-top-color: transparent;
            height: var(--size);
            left: calc(50% - var(--size) / 2);
            overflow: hidden;
            position: absolute;
            top: calc(50% - var(--size) / 2);
            z-index: 1;
        }

@keyframes appear {
    from {
        --offset: 0;
        --value: 0;
        --value-prev: 0;
    }
}

@keyframes rotate {
    0% {
        transform: rotate(0);
    }

    100% {
        transform: rotate(1turn);
    }
}
