@rendermode InteractiveServer
@page "/components/chart"

<PageTitle>Chart</PageTitle>
<article class="demo-list">
    <Demo Title="Bar chart" New WorkInProgress>
        <DemoSegment>
            Show charts of various types with the <code>&lt;Chart /&gt;</code> component. The default type is <code>ChartType.Bar</code>.
        </DemoSegment>
        <DemoSegment>
            <div class="chart-area">
                <Chart Items="Ratings" Maximum="100" Value="item => item.Rating" />
                <button @onclick="RandomizeRatings">Randomize values</button>
            </div>
        </DemoSegment>
        <DemoSegment Resource="Chart/Bar.razor" />
    </Demo>

    <Members SubjectType="typeof(Chart<,>)" />
</article>

@code {
    readonly IAsyncValue<BookRating[]> Ratings = AsyncValue.Create(async () =>
    {
        await Task.Delay(500);

        var items = BookRatingRepository.CreateRange(1, 10);
        Console.WriteLine($"Retrieved BookRating[{items.Length}]");
        return items;
    });

    void RandomizeRatings()
        => Ratings.Reset();
}
