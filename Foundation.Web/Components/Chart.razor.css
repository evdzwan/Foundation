@property --offset {
    inherits: false;
    initial-value: 0;
    syntax: "<number>";
}

@property --value {
    inherits: false;
    initial-value: 0;
    syntax: "<number>";
}

.chart {
    --gap: 0;
    --padding: 0;
    --items-count: 1;
    --value-max: 1;
    --value-sum: 1;
    display: block;
    overflow: hidden;
    position: relative;
    user-select: none;
}

    .chart > .entity {
        --index: 0;
        --offset: 0;
        --value: 0;
        overflow: hidden;
        position: absolute;
    }

    .chart.bar > .entity {
        bottom: var(--padding);
        height: calc(var(--value) / var(--value-max) * (100% - var(--padding) * 2));
        left: calc(var(--padding) + var(--index) / var(--items-count) * (100% - var(--padding) * 2 + var(--gap)));
        width: calc((100% - var(--padding) * 2 - var(--gap) * var(--items-count)) / var(--items-count));
    }

    .chart.donut > .entity {
    }

    .chart.pie > .entity:first-child {
        --lt-125: calc(round(up, .125 - var(--angle-perc)));
        --ge-125: calc(1 - var(--lt-125));
        --lt-250: calc(round(up, .250 - var(--angle-perc)));
        --ge-250: calc(1 - var(--lt-250));
        --lt-375: calc(round(up, .375 - var(--angle-perc)));
        --ge-375: calc(1 - var(--lt-375));
        --angle: calc(var(--angle-perc) * 2 * pi);
        --angle-deg: calc(var(--angle) * 1rad);
        /*--angle-perc: .3;*/
        --angle-perc: calc(var(--value) / var(--value-max));
        --side-alpha: calc(sin(var(--angle)) * 50%);
        --side-beta: calc(sin(.5 * pi - var(--angle)) * 50%);
        --p1-x: max(50% + var(--side-alpha), var(--ge-125) * 100%);
        --p1-y: 0;
        --p2-x: max(50% + var(--side-alpha), var(--ge-125) * 100%);
        --p2-y: max(var(--ge-125) * var(--side-beta), var(--ge-250) * 50%);
        --p3-x: max(50% + var(--side-alpha), var(--ge-125) * 100%);
        --p3-y: max(var(--ge-125) * var(--side-beta), max(var(--ge-250) * 50% - var(--ge-250) * var(--side-beta), var(--ge-375) * 100%));
        aspect-ratio: 1;
        border-radius: 50%;
        clip-path: polygon(50% 50%, 50% 0, var(--p1-x) var(--p1-y), var(--p2-x) var(--p2-y), var(--p3-x) var(--p3-y));
        height: min(calc(100% - var(--padding) * 2), calc(100% - var(--padding) * 2));
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }

    .chart.waterfall > .entity {
        height: calc((100% - var(--padding) * 2 - var(--gap) * var(--items-count)) / var(--items-count));
        left: calc(var(--padding) + var(--offset) / var(--value-sum) * (100% - var(--padding) * 2));
        top: calc(var(--padding) + var(--index) / var(--items-count) * (100% - var(--padding) * 2 + var(--gap)));
        width: calc(var(--value) / var(--value-sum) * (100% - var(--padding) * 2));
    }
