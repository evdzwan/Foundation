@inject NavigationManager Navigation
@inherits Component

<CascadingValue Value="this" IsFixed>
    <CascadingValue Value="CurrentPage" Name="@nameof(CurrentPage)">
        @ChildContent
    </CascadingValue>
</CascadingValue>

@code {
    [SupplyParameterFromQuery(Name = "page")] int QueryPage { get; set; }

    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public int CurrentPage { get; set; }
    [Parameter] public EventCallback<int> CurrentPageChanged { get; set; }
    [Parameter] public int PageSize { get; set; } = 10;
    [Parameter] public bool Persist { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (Persist)
        {
            await SetPage(QueryPage);
        }
    }

    public Task MoveToFirstPage() => SetPage(0);
    public Task MoveToPreviousPage() => SetPage(CurrentPage - 1);
    public Task MoveToNextPage() => SetPage(CurrentPage + 1);

    async Task SetPage(int page)
    {
        var currentPage = Math.Max(0, page);
        if (currentPage != CurrentPage)
        {
            CurrentPage = currentPage;
            await CurrentPageChanged.InvokeAsync(CurrentPage);

            if (Persist && QueryPage != CurrentPage)
            {
                var uri = Navigation.GetUriWithQueryParameter("page", CurrentPage);
                Navigation.NavigateTo(uri);
            }
        }
    }
}
